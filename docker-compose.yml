version: '3.8'
services:
    # App service
    magnat-back:
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        image: magnat-back
        privileged: true
        container_name: magnat-back
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: magnat-back
            SERVICE_TAGS: dev
            CONTAINER_ROLE: magnat-back
        working_dir: /var/www/app
        volumes:
            - ./:/var/www/app/
            - ./docker/magnat/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
        networks:
            - magnat-network
        depends_on:
            - magnat-cache

    # Web Server
    magnat-server:
        image: nginx:stable-alpine
        container_name: magnat-server
        restart: on-failure
        tty: true
        ports:
            - "${APP_PORT:-8283}:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:cached
            - ./:/var/www/app:cached
        depends_on:
            - magnat-back
        networks:
            - magnat-network

    # Cache service
    magnat-cache:
        image: redis
        restart: always
        container_name: magnat-cache
        ports:
            - '6380:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_PASSWORD}"
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - ./data/redis:/data
        networks:
            - magnat-network

    # Database
    magnat-db:
        image: mysql:8.0
        container_name: magnat-db
        environment:
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        ports:
            - '3306:3306'
        volumes:
            - db_data:/var/lib/mysql
        healthcheck:
            test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u${DB_USERNAME} -p${DB_PASSWORD}" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        networks:
            - magnat-network

#Docker Networks
networks:
    magnat-network:
        driver: bridge

volumes:
    db_data:
